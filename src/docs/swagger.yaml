# Version de l'OpenAPI
openapi: 3.0.0

# Informations générales sur l'API
info:
  title: Transaction API  # Titre de l'API
  description: API for managing transactions and related operations.  # Description de l'API
  version: 1.0.0  # Version de l'API

# Serveur sur lequel l'API est hébergée (en développement local ici)
servers:
  - url: http://localhost:3000/api/v1  # URL de l'API en développement
    description: Local development server  # Description du serveur

# Définition des différents chemins (routes) de l'API
paths:

  # Route pour mettre à jour une transaction spécifique
  /transactions/{transactionId}:
    patch:  # La méthode HTTP PATCH est utilisée pour mettre à jour des ressources existantes
      security:
        - Bearer: []  # Utilisation d'un token d'authentification Bearer
      tags:
        - Transaction Module  # Ce tag est un moyen de catégoriser l'endpoint (ici dans le module transaction)
      summary: Update Transaction Information  # Résumé rapide de l'action effectuée par cette route
      description: API to update specific fields of a transaction  # Description plus détaillée
      parameters:
        # Paramètre dans l'URL pour spécifier l'ID de la transaction à mettre à jour
        - name: transactionId
          in: path  # Ce paramètre est passé dans l'URL, dans le "path"
          required: true  # Ce paramètre est requis
          schema:
            type: string  # Le type du paramètre est une chaîne de caractères
          description: ID of the transaction to update  # Description du paramètre
      requestBody:
        required: true  # Le corps de la requête est obligatoire
        content:
          application/json:  # Le corps doit être au format JSON
            schema:
              type: object  # Le corps de la requête est un objet
              properties:
                field:
                  type: string  # Le champ à mettre à jour est une chaîne de caractères
                  description: The field to update (e.g., status, category)  # Description de ce champ
                value:
                  type: string  # La nouvelle valeur du champ est une chaîne de caractères
                  description: The new value for the field  # Description de la nouvelle valeur
              required:
                - field  # Le champ "field" est obligatoire
                - value  # La nouvelle valeur "value" est obligatoire
      responses:
        '200':  # Réponse OK, transaction mise à jour avec succès
          description: Transaction updated successfully
        '400':  # Mauvaise requête (par exemple, données mal formées)
          description: Invalid request payload
        '401':  # Accès non autorisé (problème avec le token)
          description: Unauthorized access
        '404':  # La transaction spécifiée n’a pas été trouvée
          description: Transaction not found
        '500':  # Erreur interne du serveur
          description: Internal server error

  # Route pour ajouter ou mettre à jour une note sur une transaction
  /transactions/{transactionId}/note:
    patch:  # Méthode PATCH pour mettre à jour une note
      security:
        - Bearer: []  # Utilisation d'un token d'authentification Bearer
      tags:
        - Transaction Module  # Tag de cette route, dans le même module
      summary: Add or Update Transaction Note  # Résumé de l'action effectuée par cette route
      description: API to add or update a note for a specific transaction  # Description détaillée de l’action
      parameters:
        - name: transactionId
          in: path  # Paramètre dans l'URL, dans le path
          required: true  # Ce paramètre est requis
          schema:
            type: string  # Le type de ce paramètre est une chaîne de caractères
          description: ID of the transaction to add or update the note  # Description de ce paramètre
      requestBody:
        required: true  # Le corps de la requête est obligatoire
        content:
          application/json:  # Le corps doit être au format JSON
            schema:
              type: object  # Le corps de la requête est un objet
              properties:
                note:
                  type: string  # La note est une chaîne de caractères
                  description: The content of the note  # Description de la note
              required:
                - note  # Le champ "note" est obligatoire
      responses:
        '200':  # Réponse OK, note ajoutée ou mise à jour avec succès
          description: Note added or updated successfully
        '400':  # Mauvaise requête (par exemple, données mal formées)
          description: Invalid request payload
        '401':  # Accès non autorisé
          description: Unauthorized access
        '404':  # La transaction spécifiée n’a pas été trouvée
          description: Transaction not found
        '500':  # Erreur interne du serveur
          description: Internal server error

# Composants réutilisables dans l'API (par exemple, réponse générique)
components:
  schemas:
    # Définition d'une réponse générique de l'API
    ApiResponse:
      type: object  # Le type de la réponse est un objet
      properties:
        status:
          type: string  # Le statut de la réponse est une chaîne de caractères
        message:
          type: string  # Le message associé à la réponse est également une chaîne de caractères
